% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rotation_functions.R
\name{RotateBasis}
\alias{RotateBasis}
\title{Finding a calibration-optimal basis rotation}
\usage{
RotateBasis(DataBasis, obs, kmax = 5, weightinv = NULL, v = c(rep(0.1,
  5)), vtot = 0.95, prior = NULL, StoppingRule = TRUE, MaxTime = 60,
  ...)
}
\arguments{
\item{DataBasis}{An object containing lxn ensemble data and the lxn basis that will be rotated}

\item{obs}{A vector of length l with observations on the same scale as the ensemble}

\item{kmax}{Maximum number of iterations allowed (defaults to 5)}

\item{weightinv}{Inverse of positive definite weight matrix W. If set = NULL, uses the identity.}

\item{v}{Vector of minimum proportion of the ensemble data to be explained by the corresponding rotated basis vector}

\item{vtot}{Minimum proportion of ensemble variability to be explained by the truncated basis}

\item{MaxTime}{Maximum time (in seconds) to run the optimiser at each iteration.}
}
\value{
\item{tBasis}{Full rotated basis}
\item{CentredField}{The ensemble that was passed into the function}
\item{EnsembleMean}{The ensemble mean}
\item{scaling}{Initial scaling applied to the data}
\item{RW}{The reconstruction error after each iteration}
\item{VarExp}{The variance explained by each rotated basis vector}
\item{Opt}{Linear combination of the basis that gave rotated basis vectors} #### only true for first really ####
}
\description{
Given a DataBasis object, observations, matrix W, vector v, applies the optimal rotation algorithm to find a basis more suitable for calibration.
}
\examples{
# First run an ensemble of idealised function fn

n <- 60
sample <- as.data.frame(2*maximinLHS(n,6) - 1)
colnames(sample) <- c("x1","x2","x3","x4","x5","x6")
output <- array(c(rep(0,100*n)), dim=c(10,10,n))
for (i in 1:n){
  output[,,i] <- fn(as.numeric(sample[i,]))
}
dim(output) <- c(100, n)

DataBasis <- MakeDataBasis(data = output, RemoveMean = TRUE)

# Define the observations as a known value of x, plus some noise

obs <- c(fn(c(0.7,0.01,0.01,0.25,0.8,-0.9)) + rnorm(100, mean = 0, sd = 0.1))
obs <- obs - DataBasis$EnsembleMean # centre observations so that comparable to the data

# Look at the VarMSEplot for the SVD basis

vSVD <- VarMSEplot(DataBasis = DataBasis, obs = obs)

# Perform a rotation

RotatedBasis <- RotateBasis(DataBasis = DataBasis, obs = obs, kmax = 3)

# Editing the variance constraints so that the first vector explains at least 40\% of the ensemble, at least 10\% for later vectors

RotatedBasis <- RotateBasis(DataBasis = DataBasis, obs = obs, kmax = 3, v = c(0.4,0.1,0.1))

# So far assumed that W is the identity. Now add structure to W



}
